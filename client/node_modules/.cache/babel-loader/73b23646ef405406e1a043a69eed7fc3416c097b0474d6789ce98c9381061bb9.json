{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\to_do\\\\client\\\\src\\\\components\\\\InputTodo.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputTodo = () => {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = {\n        description\n      };\n      const response = await fetch(\"http://localhost:5000/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mt-5\",\n      children: \"Pern Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex mt-5\",\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(InputTodo, \"TGjZQ3qybQpfuuyq4pt/G8F12Bc=\");\n_c = InputTodo;\nexport default InputTodo;\nvar _c;\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"names":["React","Fragment","useState","jsxDEV","_jsxDEV","InputTodo","_s","description","setDescription","onSubmitForm","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","err","console","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/React/to_do/client/src/components/InputTodo.js"],"sourcesContent":["import React , {Fragment, useState} from 'react'\r\n\r\nconst InputTodo = () => {\r\n\r\n    const [description , setDescription] = useState(\"\");\r\n\r\n    const onSubmitForm = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description };\r\n            const response = await fetch(\"http://localhost:5000/todos\",{\r\n                method:\"POST\",\r\n                headers:{\"Content-Type\" :\"application/json\"},\r\n                body:JSON.stringify(body),\r\n            });\r\n\r\n            \r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='text-center mt-5'>Pern Todo List</h1>\r\n            <form className='d-flex mt-5' onSubmit={onSubmitForm}>\r\n                <input \r\n                type=\"text\" \r\n                className='form-control' \r\n                value={description} \r\n                onChange={e => setDescription(e.target.value)}/>\r\n                <button className='btn btn-success'>Add</button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default InputTodo"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,WAAW,EAAGC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEnD,MAAMO,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,IAAI,GAAG;QAAEL;MAAY,CAAC;MAC5B,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAC;QACvDC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC5CJ,IAAI,EAACK,IAAI,CAACC,SAAS,CAACN,IAAI;MAC5B,CAAC,CAAC;IAGN,CAAC,CAAC,OAAOO,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;IAC9B;EACJ,CAAC;EAED,oBACIlB,OAAA,CAACH,QAAQ;IAAAsB,QAAA,gBACLnB,OAAA;MAAIoB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDxB,OAAA;MAAMoB,SAAS,EAAC,aAAa;MAACK,QAAQ,EAAEpB,YAAa;MAAAc,QAAA,gBACjDnB,OAAA;QACA0B,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,cAAc;QACxBO,KAAK,EAAExB,WAAY;QACnByB,QAAQ,EAAEtB,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChDxB,OAAA;QAAQoB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEnB,CAAC;AAAAtB,EAAA,CAjCKD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAmCf,eAAeA,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}